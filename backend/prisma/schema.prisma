generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  requisitions Requisition[]
  accounts     Account[]
}

model Requisition {
  id         String    @id @default(uuid())
  externalId String    @unique
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  accounts   Account[]
}

model Account {
  id            String        @id @default(uuid())
  externalId    String        @unique
  requisitionId String
  requisition   Requisition   @relation(fields: [requisitionId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  lastFetchedAt DateTime?
  transactions  Transaction[]
  users         User[]
  iban          String
  name          String
  categories    Category[]
}

model Transaction {
  id               String                @id @default(uuid())
  externalId       String                @unique
  accountId        String
  account          Account               @relation(fields: [accountId], references: [id])
  createdAt        DateTime
  importedAt       DateTime              @default(now())
  updatedAt        DateTime              @updatedAt
  amount           Float
  currency         String
  description      String
  counterPartyName String
  note             String?
  categories       TransactionCategory[]
}

model Category {
  id           String                @id @default(uuid())
  name         String                @unique
  transactions TransactionCategory[]
  accountId    String
  account      Account               @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

model TransactionCategory {
  id            String      @id @default(uuid())
  amount        Float
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  categoryId    String
  category      Category    @relation(fields: [categoryId], references: [id])
}
