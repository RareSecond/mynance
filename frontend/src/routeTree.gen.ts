/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as NonAuthRoutesImport } from './routes/~_nonAuthRoutes'
import { Route as AuthRoutesImport } from './routes/~_authRoutes'
import { Route as NonAuthRoutesLoginImport } from './routes/~_nonAuthRoutes/~login'
import { Route as AuthRoutesIndexImport } from './routes/~_authRoutes/~index'
import { Route as AuthRoutesSettingsIndexImport } from './routes/~_authRoutes/~settings/~index'
import { Route as AuthRoutesSettingsAccountsNewImport } from './routes/~_authRoutes/~settings/~accounts/~new'
import { Route as AuthRoutesSettingsAccountsListTransactionsImport } from './routes/~_authRoutes/~settings/~accounts/~listTransactions'
import { Route as AuthRoutesSettingsAccountsRequisitionCallbackImport } from './routes/~_authRoutes/~settings/~accounts/~requisition/~callback'

// Create/Update Routes

const NonAuthRoutesRoute = NonAuthRoutesImport.update({
  id: '/_nonAuthRoutes',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoutesRoute = AuthRoutesImport.update({
  id: '/_authRoutes',
  getParentRoute: () => rootRoute,
} as any)

const NonAuthRoutesLoginRoute = NonAuthRoutesLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NonAuthRoutesRoute,
} as any)

const AuthRoutesIndexRoute = AuthRoutesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoutesRoute,
} as any)

const AuthRoutesSettingsIndexRoute = AuthRoutesSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AuthRoutesRoute,
} as any)

const AuthRoutesSettingsAccountsNewRoute =
  AuthRoutesSettingsAccountsNewImport.update({
    id: '/settings/accounts/new',
    path: '/settings/accounts/new',
    getParentRoute: () => AuthRoutesRoute,
  } as any)

const AuthRoutesSettingsAccountsListTransactionsRoute =
  AuthRoutesSettingsAccountsListTransactionsImport.update({
    id: '/settings/accounts/listTransactions',
    path: '/settings/accounts/listTransactions',
    getParentRoute: () => AuthRoutesRoute,
  } as any)

const AuthRoutesSettingsAccountsRequisitionCallbackRoute =
  AuthRoutesSettingsAccountsRequisitionCallbackImport.update({
    id: '/settings/accounts/requisition/callback',
    path: '/settings/accounts/requisition/callback',
    getParentRoute: () => AuthRoutesRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authRoutes': {
      id: '/_authRoutes'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRoutesImport
      parentRoute: typeof rootRoute
    }
    '/_nonAuthRoutes': {
      id: '/_nonAuthRoutes'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NonAuthRoutesImport
      parentRoute: typeof rootRoute
    }
    '/_authRoutes/': {
      id: '/_authRoutes/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthRoutesIndexImport
      parentRoute: typeof AuthRoutesImport
    }
    '/_nonAuthRoutes/login': {
      id: '/_nonAuthRoutes/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NonAuthRoutesLoginImport
      parentRoute: typeof NonAuthRoutesImport
    }
    '/_authRoutes/settings/': {
      id: '/_authRoutes/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthRoutesSettingsIndexImport
      parentRoute: typeof AuthRoutesImport
    }
    '/_authRoutes/settings/accounts/listTransactions': {
      id: '/_authRoutes/settings/accounts/listTransactions'
      path: '/settings/accounts/listTransactions'
      fullPath: '/settings/accounts/listTransactions'
      preLoaderRoute: typeof AuthRoutesSettingsAccountsListTransactionsImport
      parentRoute: typeof AuthRoutesImport
    }
    '/_authRoutes/settings/accounts/new': {
      id: '/_authRoutes/settings/accounts/new'
      path: '/settings/accounts/new'
      fullPath: '/settings/accounts/new'
      preLoaderRoute: typeof AuthRoutesSettingsAccountsNewImport
      parentRoute: typeof AuthRoutesImport
    }
    '/_authRoutes/settings/accounts/requisition/callback': {
      id: '/_authRoutes/settings/accounts/requisition/callback'
      path: '/settings/accounts/requisition/callback'
      fullPath: '/settings/accounts/requisition/callback'
      preLoaderRoute: typeof AuthRoutesSettingsAccountsRequisitionCallbackImport
      parentRoute: typeof AuthRoutesImport
    }
  }
}

// Create and export the route tree

interface AuthRoutesRouteChildren {
  AuthRoutesIndexRoute: typeof AuthRoutesIndexRoute
  AuthRoutesSettingsIndexRoute: typeof AuthRoutesSettingsIndexRoute
  AuthRoutesSettingsAccountsListTransactionsRoute: typeof AuthRoutesSettingsAccountsListTransactionsRoute
  AuthRoutesSettingsAccountsNewRoute: typeof AuthRoutesSettingsAccountsNewRoute
  AuthRoutesSettingsAccountsRequisitionCallbackRoute: typeof AuthRoutesSettingsAccountsRequisitionCallbackRoute
}

const AuthRoutesRouteChildren: AuthRoutesRouteChildren = {
  AuthRoutesIndexRoute: AuthRoutesIndexRoute,
  AuthRoutesSettingsIndexRoute: AuthRoutesSettingsIndexRoute,
  AuthRoutesSettingsAccountsListTransactionsRoute:
    AuthRoutesSettingsAccountsListTransactionsRoute,
  AuthRoutesSettingsAccountsNewRoute: AuthRoutesSettingsAccountsNewRoute,
  AuthRoutesSettingsAccountsRequisitionCallbackRoute:
    AuthRoutesSettingsAccountsRequisitionCallbackRoute,
}

const AuthRoutesRouteWithChildren = AuthRoutesRoute._addFileChildren(
  AuthRoutesRouteChildren,
)

interface NonAuthRoutesRouteChildren {
  NonAuthRoutesLoginRoute: typeof NonAuthRoutesLoginRoute
}

const NonAuthRoutesRouteChildren: NonAuthRoutesRouteChildren = {
  NonAuthRoutesLoginRoute: NonAuthRoutesLoginRoute,
}

const NonAuthRoutesRouteWithChildren = NonAuthRoutesRoute._addFileChildren(
  NonAuthRoutesRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof NonAuthRoutesRouteWithChildren
  '/': typeof AuthRoutesIndexRoute
  '/login': typeof NonAuthRoutesLoginRoute
  '/settings': typeof AuthRoutesSettingsIndexRoute
  '/settings/accounts/listTransactions': typeof AuthRoutesSettingsAccountsListTransactionsRoute
  '/settings/accounts/new': typeof AuthRoutesSettingsAccountsNewRoute
  '/settings/accounts/requisition/callback': typeof AuthRoutesSettingsAccountsRequisitionCallbackRoute
}

export interface FileRoutesByTo {
  '': typeof NonAuthRoutesRouteWithChildren
  '/': typeof AuthRoutesIndexRoute
  '/login': typeof NonAuthRoutesLoginRoute
  '/settings': typeof AuthRoutesSettingsIndexRoute
  '/settings/accounts/listTransactions': typeof AuthRoutesSettingsAccountsListTransactionsRoute
  '/settings/accounts/new': typeof AuthRoutesSettingsAccountsNewRoute
  '/settings/accounts/requisition/callback': typeof AuthRoutesSettingsAccountsRequisitionCallbackRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authRoutes': typeof AuthRoutesRouteWithChildren
  '/_nonAuthRoutes': typeof NonAuthRoutesRouteWithChildren
  '/_authRoutes/': typeof AuthRoutesIndexRoute
  '/_nonAuthRoutes/login': typeof NonAuthRoutesLoginRoute
  '/_authRoutes/settings/': typeof AuthRoutesSettingsIndexRoute
  '/_authRoutes/settings/accounts/listTransactions': typeof AuthRoutesSettingsAccountsListTransactionsRoute
  '/_authRoutes/settings/accounts/new': typeof AuthRoutesSettingsAccountsNewRoute
  '/_authRoutes/settings/accounts/requisition/callback': typeof AuthRoutesSettingsAccountsRequisitionCallbackRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login'
    | '/settings'
    | '/settings/accounts/listTransactions'
    | '/settings/accounts/new'
    | '/settings/accounts/requisition/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/login'
    | '/settings'
    | '/settings/accounts/listTransactions'
    | '/settings/accounts/new'
    | '/settings/accounts/requisition/callback'
  id:
    | '__root__'
    | '/_authRoutes'
    | '/_nonAuthRoutes'
    | '/_authRoutes/'
    | '/_nonAuthRoutes/login'
    | '/_authRoutes/settings/'
    | '/_authRoutes/settings/accounts/listTransactions'
    | '/_authRoutes/settings/accounts/new'
    | '/_authRoutes/settings/accounts/requisition/callback'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoutesRoute: typeof AuthRoutesRouteWithChildren
  NonAuthRoutesRoute: typeof NonAuthRoutesRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoutesRoute: AuthRoutesRouteWithChildren,
  NonAuthRoutesRoute: NonAuthRoutesRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/_authRoutes",
        "/_nonAuthRoutes"
      ]
    },
    "/_authRoutes": {
      "filePath": "~_authRoutes.tsx",
      "children": [
        "/_authRoutes/",
        "/_authRoutes/settings/",
        "/_authRoutes/settings/accounts/listTransactions",
        "/_authRoutes/settings/accounts/new",
        "/_authRoutes/settings/accounts/requisition/callback"
      ]
    },
    "/_nonAuthRoutes": {
      "filePath": "~_nonAuthRoutes.tsx",
      "children": [
        "/_nonAuthRoutes/login"
      ]
    },
    "/_authRoutes/": {
      "filePath": "~_authRoutes/~index.tsx",
      "parent": "/_authRoutes"
    },
    "/_nonAuthRoutes/login": {
      "filePath": "~_nonAuthRoutes/~login.tsx",
      "parent": "/_nonAuthRoutes"
    },
    "/_authRoutes/settings/": {
      "filePath": "~_authRoutes/~settings/~index.tsx",
      "parent": "/_authRoutes"
    },
    "/_authRoutes/settings/accounts/listTransactions": {
      "filePath": "~_authRoutes/~settings/~accounts/~listTransactions.tsx",
      "parent": "/_authRoutes"
    },
    "/_authRoutes/settings/accounts/new": {
      "filePath": "~_authRoutes/~settings/~accounts/~new.tsx",
      "parent": "/_authRoutes"
    },
    "/_authRoutes/settings/accounts/requisition/callback": {
      "filePath": "~_authRoutes/~settings/~accounts/~requisition/~callback.tsx",
      "parent": "/_authRoutes"
    }
  }
}
ROUTE_MANIFEST_END */
